<<<<<<< HEAD
name: gh-actions
description: learn github actions in rust
=======
name: fibbot2
description: It will run my rust project
>>>>>>> 6d3c29a7f62dea56caf23d7498b6c7e06768c5b7
author: jagoum <jagoum24@gmail.com>
inputs:
  error:
    description: 'The error message to display, if any'
    required: false
<<<<<<< HEAD
    default: ''
=======
    default: ""
  runs:
    using: "docker"
    image: "ghcr.io/jagoum/lambert_w"
    args:
      - ${{ inputs.error }}

>>>>>>> 6d3c29a7f62dea56caf23d7498b6c7e06768c5b7
  token:
    description: 'The GitHub token to use for downloading the action, defaults to workflow token'
    required: true
    default: ${{ github.token }}
outputs:
  error:
    description: 'The description of any error that occurred'
    value: ${{ steps.run.outputs.error }}

runs:
  using: 'composite'
  steps:
    - name: Set reusable variables
      shell: bash
      run: |
        echo "action_repo=fibbot2" >> $GITHUB_ENV
        echo "action_org=jagoum" >> $GITHUB_ENV
<<<<<<< HEAD
        echo "binary_name=gh-actions" >> $GITHUB_ENV
=======
        echo "binary_name=fibbot2" >> $GITHUB_ENV
>>>>>>> 6d3c29a7f62dea56caf23d7498b6c7e06768c5b7

    - name: Add binary extension
      shell: bash
      if: runner.os == 'Windows'
      run: echo "binary_name=${{ env.binary_name }}.exe" >> $GITHUB_ENV

    - name: Get Action Version
      id: get_action_version
      shell: pwsh
      run: |
        $finalComponent = Split-Path -Leaf ${{ github.action_path }}
        if ($finalComponent -eq "${{ env.action_repo }}") {
          $version = ""
        } else {
          $version = $finalComponent
        }
        Write-Output "version=$version" >> $Env:GITHUB_OUTPUT

    - name: Download Action
      shell: bash
      run: |
        gh release download ${{ steps.get_action_version.outputs.version }} --repo ${{ env.action_org }}/${{ env.action_repo }} --pattern '${{ runner.os }}.tgz'
        tar -xzf ${{ runner.os }}.tgz
      env:
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: Run Action
      shell: bash
      id: run
      run: ./${{ runner.os }}/${{ env.binary_name }} "${{ inputs.error }}"
